import { useState, useEffect } from 'react';

export default function Admin2() {
  const [kelas, setKelas] = useState("XI C");
  const [wali, setWali] = useState("Gun Gun Nugraha");
  const [tanggal, setTanggal] = useState(new Date().toISOString().slice(0, 10));

  const [siswaShalat, setSiswaShalat] = useState([]);
  const [salinText, setSalinText] = useState('');

  // Ambil data siswa cowok
  const fetchSiswa = async () => {
    try {
      const res = await fetch('/api/getSiswa', { cache: 'no-store' }); // siswa cowok ambil dari getSiswa2
      const json = await res.json();
      setSiswaShalat(json.siswa || []);
    } catch {
      setSiswaShalat([]);
    }
  };

  useEffect(() => {
    const token = localStorage.getItem('admin_ok');
    if (!token) {
      window.location.href = '/';
      return;
    }
    fetchSiswa();
  }, []);

  const logout = () => {
    localStorage.removeItem('admin_ok');
    window.location.href = '/';
  };

  const simpanSiswa = async (list) => {
    const res = await fetch('/api/updateSiswa', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ siswa: list })
    });
    const json = await res.json();
    if (json.success) fetchSiswa();
    else alert('Gagal simpan siswa: ' + JSON.stringify(json.error || json));
  };

  const tambahSiswa = async () => {
    const nama = prompt('Nama siswa baru:');
    if (!nama) return;
    const updated = [...siswaShalat, { id: Date.now(), nama }];
    await simpanSiswa(updated);
  };

  const hapusSiswa = async (id) => {
    if (!confirm('Hapus siswa ini?')) return;
    const updated = siswaShalat.filter(s => s.id !== id);
    await simpanSiswa(updated);
  };

  const simpanAbsensi = async () => {
    const hasil = siswaShalat.map(s => ({
      nama: s.nama,
      shalat: document.querySelector(`input[name="shalat_${s.id}"]:checked`)?.value || "Tidak"
    }));
    const data = { kelas, wali_kelas: wali, absensi: { [tanggal]: hasil } };

    const res = await fetch('/api/updateHasil', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(data)
    });
    const json = await res.json();
    alert(json.success ? 'Absensi shalat siswa berhasil disimpan!' : 'Gagal simpan absensi siswa!');
  };

  const salinHasil = () => {
    const hasil = siswaShalat.map(s => ({
      nama: s.nama,
      shalat: document.querySelector(`input[name="shalat_${s.id}"]:checked`)?.value || "Tidak"
    }));

    const total = hasil.length;
    const jumlahYa = hasil.filter(h => h.shalat === 'Ya').length;
    const jumlahTidak = hasil.filter(h => h.shalat === 'Tidak').length;
    const jumlahDispen = hasil.filter(h => h.shalat === 'Dispen').length;
    const jumlahTidakSekolah = hasil.filter(h => h.shalat === 'Tidak Sekolah').length;

    let teks = `Rekap Absensi Shalat - Kelas ${kelas} (Wali Kelas: ${wali})\nTanggal: ${tanggal}\n\n`;

    hasil.forEach((h, i) => {
      let status = h.shalat;
      if (h.shalat === 'Dispen') status = 'Tidak Sekolah (Dispen)';
      teks += `${i + 1}. ${h.nama} | Shalat: ${status}\n`;
    });

    teks += `\n---\nSHALAT : ${jumlahYa} ORANG\nTIDAK SHALAT : ${jumlahTidak} ORANG\nDISPEN : ${jumlahDispen} ORANG\nTIDAK SEKOLAH : ${jumlahTidakSekolah} ORANG\nTOTAL SISWA : ${total} ORANG\n---\nLihat Hasil Absen\nhttps://absensi-xic.vercel.app\n---\nGenerated by Sistem Absensi Sekolah\nÂ© 2025 - Created by Rizky`;

    setSalinText(teks);
    navigator.clipboard.writeText(teks);
    alert('Hasil absensi berhasil disalin ke clipboard!');
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-900 via-indigo-900 to-purple-900 text-white p-6">
      {/* Tombol Logout */}
      <div className="flex justify-end mb-4">
        <button onClick={logout} className="bg-red-600 px-4 py-2 rounded">Keluar</button>
      </div>

      <h2 className="text-3xl font-bold text-center mb-6">Panel Admin Absensi (Siswa)</h2>
      <div className="flex flex-col md:flex-row justify-center space-x-0 md:space-x-6 mb-6">
        <label className="flex flex-col mb-2">
          <span>Tanggal:</span>
          <input type="date" value={tanggal} onChange={e => setTanggal(e.target.value)} className="px-3 py-2 rounded bg-gray-800 text-white" />
        </label>
        <label className="flex flex-col mb-2">
          <span>Kelas:</span>
          <input value={kelas} onChange={e => setKelas(e.target.value)} className="px-3 py-2 rounded bg-gray-800 text-white" />
        </label>
        <label className="flex flex-col mb-2">
          <span>Wali Kelas:</span>
          <input value={wali} onChange={e => setWali(e.target.value)} className="px-3 py-2 rounded bg-gray-800 text-white" />
        </label>
      </div>

      {/* Absensi Shalat (Siswa) */}
      <div className="bg-gray-900/70 p-4 rounded-lg shadow">
        <h3 className="text-xl font-bold text-purple-400 mb-3">Absensi Shalat Siswa</h3>
        <button className="bg-green-500 px-4 py-2 rounded mb-4" onClick={tambahSiswa}>Tambah Siswa</button>
        <table className="table-auto w-full text-white border">
          <thead>
            <tr className="bg-purple-700">
              <th>No</th><th>Nama</th><th>Ya</th><th>Tidak</th><th>Dispen</th><th>Tidak Sekolah</th><th>Aksi</th>
            </tr>
          </thead>
          <tbody>
            {siswaShalat.map((s, i) => (
              <tr key={s.id} className="border-t border-gray-700">
                <td>{i + 1}</td>
                <td>{s.nama}</td>
                {/* Radio group per siswa */}
                {['Ya', 'Tidak', 'Dispen', 'Tidak Sekolah'].map(v => (
                  <td key={v}><input type="radio" name={`shalat_${s.id}`} value={v} defaultChecked={v === 'Ya'} /></td>
                ))}
                <td><button onClick={() => hapusSiswa(s.id)} className="bg-red-600 px-3 py-1 rounded">Hapus</button></td>
              </tr>
            ))}
          </tbody>
        </table>

        {/* Tombol Simpan dan Salin */}
        <div className="flex flex-col md:flex-row justify-between items-center mt-4 gap-4">
          <button className="bg-blue-500 px-5 py-2 rounded" onClick={simpanAbsensi}>Simpan Absensi</button>
          <button className="bg-green-500 px-5 py-2 rounded" onClick={salinHasil}>Salin Hasil</button>
        </div>

        {/* Preview hasil salinan */}
        <textarea
          className="w-full mt-4 p-3 rounded-lg bg-gray-800 text-sm text-gray-100 border border-gray-700"
          rows={8}
          readOnly
          value={salinText}
          placeholder="Hasil salinan absensi akan muncul di sini setelah disalin"
        ></textarea>
      </div>
    </div>
  );
}
