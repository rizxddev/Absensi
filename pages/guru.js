import { useState, useEffect } from 'react';
import { useRouter } from 'next/router';
import * as XLSX from 'xlsx'; // install: npm install xlsx

export default function Guru() {
  const [data, setData] = useState(null);
  const [tanggalList, setTanggalList] = useState([]);
  const [tanggalPilih, setTanggalPilih] = useState('');
  const [salinText, setSalinText] = useState('');
  const [userGuru, setUserGuru] = useState('');
  const router = useRouter();

  // Cek login guru
  useEffect(() => {
    const loginUser = localStorage.getItem('guru_login');
    if (!loginUser) {
      router.push('/loginGuru');
      return;
    }
    setUserGuru(loginUser);

    // Ambil data absensi
    fetch('/hasil.json').then(r => r.json()).then(json => {
      setData(json);
      const keys = Object.keys(json.absensi || {}).sort((a, b) => new Date(b) - new Date(a));
      setTanggalList(keys);
      setTanggalPilih(keys[0] || ''); // default: tanggal terbaru
    });
  }, [router]);

  // Buat teks untuk copy (dengan header + footer)
  const buatTeks = (tgl) => {
    if (!data || !tgl || !data.absensi[tgl]) return '';
    let teks = `Rekap Absensi Kelas ${data.kelas} (Wali: ${data.wali_kelas})\n`;
    teks += `Tanggal: ${tgl}\n\n`;

    data.absensi[tgl].forEach((r, i) => {
      teks += `${i + 1}. ${r.nama} | Sekolah: ${r.sekolah} | Shalat: ${r.shalat}\n`;
    });

    teks += `\n---\nGenerated by Sistem Absensi Sekolah\n© 2025 - Created with ❤️ by Rizky`;
    return teks;
  };

  // Salin hasil absensi
  const salinKeClipboard = () => {
    const teks = buatTeks(tanggalPilih);
    if (!teks) {
      alert('Tidak ada data untuk tanggal yang dipilih.');
      return;
    }
    setSalinText(teks);
    navigator.clipboard.writeText(teks);
    alert(`Hasil absensi tanggal ${tanggalPilih} berhasil disalin!`);
  };

  // Download hasil absensi ke Excel
  const downloadExcel = () => {
    if (!data || !tanggalPilih || !data.absensi[tanggalPilih]) {
      alert('Tidak ada data untuk tanggal yang dipilih.');
      return;
    }

    const header = [
      [`Rekap Absensi Kelas ${data.kelas} (Wali: ${data.wali_kelas})`],
      [`Tanggal: ${tanggalPilih}`],
      [''],
      ['No', 'Nama', 'Absen Sekolah', 'Absen Shalat']
    ];
    const body = data.absensi[tanggalPilih].map((r, i) => [
      i + 1, r.nama, r.sekolah, r.shalat
    ]);
    const footer = [
      [''],
      ['---'],
      ['Generated by Sistem Absensi Sekolah'],
      ['© 2025 - Created with ❤️ by Rizky']
    ];
    const sheetData = [...header, ...body, ...footer];

    const worksheet = XLSX.utils.aoa_to_sheet(sheetData);
    const workbook = XLSX.utils.book_new();
    XLSX.utils.book_append_sheet(workbook, worksheet, `Absen_${tanggalPilih}`);

    const filename = `Rekap Absensi Kelas ${data.kelas} - ${tanggalPilih}.xlsx`;
    XLSX.writeFile(workbook, filename);
  };

  if (!data) return <p className="p-6">Memuat data...</p>;

  return (
    <div className="p-6 max-w-3xl mx-auto">
      {/* Tombol logout */}
      <div className="flex justify-between mb-4">
        <span className="text-gray-600 text-sm">Login sebagai: {userGuru}</span>
        <button
          className="bg-red-500 text-white px-4 py-1 rounded"
          onClick={() => {
            localStorage.removeItem('guru_login');
            router.push('/loginGuru');
          }}
        >
          Logout
        </button>
      </div>

      <h2 className="text-2xl font-bold mb-2">Rekap Absensi</h2>
      <p>Kelas: {data.kelas} | Wali Kelas: {data.wali_kelas}</p>

      {/* Pilih tanggal */}
      <div className="my-4 flex gap-4 flex-wrap">
        <label>
          Pilih tanggal:
          <select
            className="border ml-2 px-2 py-1"
            value={tanggalPilih}
            onChange={e => setTanggalPilih(e.target.value)}
          >
            {tanggalList.map(tgl => (
              <option key={tgl} value={tgl}>{tgl}</option>
            ))}
          </select>
        </label>
      </div>

      {/* Tombol aksi */}
      <div className="flex gap-4 mb-4">
        <button
          className="bg-green-500 text-white px-4 py-2 rounded"
          onClick={salinKeClipboard}
        >
          Salin Hasil (Teks)
        </button>
        <button
          className="bg-blue-500 text-white px-4 py-2 rounded"
          onClick={downloadExcel}
        >
          Download Excel (XLSX)
        </button>
      </div>

      {/* Tabel absensi */}
      <table className="table-auto w-full border">
        <thead>
          <tr className="bg-gray-200">
            <th>No</th><th>Nama</th><th>Absen Sekolah</th><th>Absen Shalat</th>
          </tr>
        </thead>
        <tbody>
          {tanggalPilih && data.absensi[tanggalPilih] ? (
            data.absensi[tanggalPilih].map((r, i) => (
              <tr key={i} className="border-t">
                <td>{i + 1}</td>
                <td>{r.nama}</td>
                <td>{r.sekolah}</td>
                <td>{r.shalat}</td>
              </tr>
            ))
          ) : (
            <tr><td colSpan={4} className="text-center">Tidak ada data</td></tr>
          )}
        </tbody>
      </table>

      {/* Footer credit */}
      <div className="mt-6 text-center text-gray-600 text-sm">
        ---<br />
        Generated by <b>Sistem Absensi Sekolah</b><br />
        © 2025 - Created with ❤️ by <b>Rizky</b>
      </div>

      {/* Preview teks hasil salinan */}
      <textarea
        className="w-full mt-4 p-2 border text-sm"
        rows={6}
        readOnly
        value={salinText}
        placeholder="Hasil salinan akan muncul di sini setelah klik 'Salin Hasil (Teks)'"
      ></textarea>
    </div>
  );
}