import { useState, useEffect } from 'react';

export default function Guru() {
  const [dataSekolah, setDataSekolah] = useState(null);
  const [dataShalat, setDataShalat] = useState(null);
  const [tanggalListSekolah, setTanggalListSekolah] = useState([]);
  const [tanggalListShalat, setTanggalListShalat] = useState([]);
  const [tanggalPilihSekolah, setTanggalPilihSekolah] = useState('');
  const [tanggalPilihShalat, setTanggalPilihShalat] = useState('');
  const [salinText, setSalinText] = useState('');

  useEffect(() => {
    // Ambil hasil absensi sekolah
    fetch('/api/getHasil2', { cache: 'no-store' })
      .then(r => r.json())
      .then(json => {
        setDataSekolah(json);
        const keys = Object.keys(json.absensi || {}).sort((a, b) => new Date(b) - new Date(a));
        setTanggalListSekolah(keys);
        setTanggalPilihSekolah(keys[0] || '');
      });

    // Ambil hasil absensi shalat
    fetch('/api/getHasil', { cache: 'no-store' })
      .then(r => r.json())
      .then(json => {
        setDataShalat(json);
        const keys = Object.keys(json.absensi || {}).sort((a, b) => new Date(b) - new Date(a));
        setTanggalListShalat(keys);
        setTanggalPilihShalat(keys[0] || '');
      });
  }, []);

  const buatTeks = (tipe, tgl) => {
    const data = tipe === 'sekolah' ? dataSekolah : dataShalat;
    if (!data || !tgl || !data.absensi[tgl]) return '';

    let judul = tipe === 'sekolah' ? 'Rekap Absensi Sekolah' : 'Rekap Absensi Shalat';
    let teks = `${judul} - Kelas ${data.kelas} (Wali: ${data.wali_kelas})\nTanggal: ${tgl}\n\n`;
    data.absensi[tgl].forEach((r, i) => {
      if (tipe === 'sekolah') {
        teks += `${i + 1}. ${r.nama} | Sekolah: ${r.sekolah || '-'}\n`;
      } else {
        teks += `${i + 1}. ${r.nama} | Shalat: ${r.shalat || '-'}\n`;
      }
    });
    teks += `\n---\nGenerated by Sistem Absensi Sekolah\nÂ© 2025 - Created by Rizky`;
    return teks;
  };

  const salinKeClipboard = (tipe) => {
    const tgl = tipe === 'sekolah' ? tanggalPilihSekolah : tanggalPilihShalat;
    const teks = buatTeks(tipe, tgl);
    if (!teks) {
      alert('Tidak ada data untuk tanggal yang dipilih.');
      return;
    }
    setSalinText(teks);
    navigator.clipboard.writeText(teks);
    alert(`Hasil absensi (${tipe}) tanggal ${tgl} berhasil disalin!`);
  };

  const keluar = () => {
    window.location.href = '/';
  };

  if (!dataSekolah || !dataShalat) {
    return <p className="p-6 text-center text-white">Memuat data absensi...</p>;
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-900 via-indigo-900 to-purple-900 text-white p-6">
      <div className="max-w-5xl mx-auto bg-gray-900/80 p-6 rounded-2xl shadow-2xl border border-indigo-400/50">
        <div className="flex justify-end mb-6">
          <button
            onClick={keluar}
            className="bg-red-600 hover:bg-red-700 text-white px-4 py-1 rounded-lg text-sm"
          >
            Keluar
          </button>
        </div>

        {/* Rekap Absensi Sekolah */}
        <h2 className="text-2xl font-bold text-indigo-300 mb-3">Rekap Absensi Sekolah (Siswa)</h2>
        <label className="block mb-2">
          Pilih tanggal:
          <select
            className="ml-2 px-3 py-1 rounded bg-gray-800 text-white border border-indigo-400"
            value={tanggalPilihSekolah}
            onChange={e => setTanggalPilihSekolah(e.target.value)}
          >
            {tanggalListSekolah.map(tgl => <option key={tgl}>{tgl}</option>)}
          </select>
        </label>
        <button
          onClick={() => salinKeClipboard('sekolah')}
          className="bg-green-500 hover:bg-green-600 text-white px-6 py-2 rounded-lg mb-4"
        >
          Salin Hasil Sekolah
        </button>
        <table className="table-auto w-full text-left border border-gray-700 mb-6">
          <thead>
            <tr className="bg-indigo-700 text-white">
              <th className="px-4 py-2">No</th>
              <th className="px-4 py-2">Nama</th>
              <th className="px-4 py-2">Absen Sekolah</th>
            </tr>
          </thead>
          <tbody>
            {tanggalPilihSekolah && dataSekolah.absensi[tanggalPilihSekolah] ? (
              dataSekolah.absensi[tanggalPilihSekolah].map((r, i) => (
                <tr key={i} className="border-t border-gray-700">
                  <td className="px-4 py-2">{i + 1}</td>
                  <td className="px-4 py-2">{r.nama}</td>
                  <td className="px-4 py-2">{r.sekolah || '-'}</td>
                </tr>
              ))
            ) : (
              <tr><td colSpan={3} className="text-center p-4 text-gray-400">Tidak ada data</td></tr>
            )}
          </tbody>
        </table>

        {/* Rekap Absensi Shalat */}
        <h2 className="text-2xl font-bold text-purple-300 mb-3">Rekap Absensi Shalat (Siswa)</h2>
        <label className="block mb-2">
          Pilih tanggal:
          <select
            className="ml-2 px-3 py-1 rounded bg-gray-800 text-white border border-purple-400"
            value={tanggalPilihShalat}
            onChange={e => setTanggalPilihShalat(e.target.value)}
          >
            {tanggalListShalat.map(tgl => <option key={tgl}>{tgl}</option>)}
          </select>
        </label>
        <button
          onClick={() => salinKeClipboard('shalat')}
          className="bg-green-500 hover:bg-green-600 text-white px-6 py-2 rounded-lg mb-4"
        >
          Salin Hasil Shalat
        </button>
        <table className="table-auto w-full text-left border border-gray-700">
          <thead>
            <tr className="bg-purple-700 text-white">
              <th className="px-4 py-2">No</th>
              <th className="px-4 py-2">Nama</th>
              <th className="px-4 py-2">Absen Shalat</th>
            </tr>
          </thead>
          <tbody>
            {tanggalPilihShalat && dataShalat.absensi[tanggalPilihShalat] ? (
              dataShalat.absensi[tanggalPilihShalat].map((r, i) => (
                <tr key={i} className="border-t border-gray-700">
                  <td className="px-4 py-2">{i + 1}</td>
                  <td className="px-4 py-2">{r.nama}</td>
                  <td className="px-4 py-2">{r.shalat || '-'}</td>
                </tr>
              ))
            ) : (
              <tr><td colSpan={3} className="text-center p-4 text-gray-400">Tidak ada data</td></tr>
            )}
          </tbody>
        </table>

        <textarea
          className="w-full mt-4 p-3 rounded-lg bg-gray-800 text-sm text-gray-100 border border-gray-700"
          rows={6}
          readOnly
          value={salinText}
          placeholder="Hasil salinan akan muncul di sini setelah klik tombol salin"
        ></textarea>
      </div>
    </div>
  );
                }
