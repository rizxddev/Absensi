import { useState, useEffect } from 'react';

export default function Guru() {
  const [dataSiswa, setDataSiswa] = useState(null);
  const [dataSiswi, setDataSiswi] = useState(null);
  const [tanggalList, setTanggalList] = useState([]);
  const [tanggalPilih, setTanggalPilih] = useState('');
  const [salinText, setSalinText] = useState('');

  useEffect(() => {
    Promise.all([
      fetch('/api/getHasil', { cache: 'no-store' }).then(r => r.json()),
      fetch('/api/getHasil2', { cache: 'no-store' }).then(r => r.json())
    ]).then(([siswa, siswi]) => {
      setDataSiswa(siswa);
      setDataSiswi(siswi);

      // Ambil semua tanggal dari keduanya, gabungkan, urutkan
      const allDates = Array.from(
        new Set([
          ...Object.keys(siswa.absensi || {}),
          ...Object.keys(siswi.absensi || {})
        ])
      ).sort((a, b) => new Date(b) - new Date(a));

      setTanggalList(allDates);
      setTanggalPilih(allDates[0] || '');
    });
  }, []);

  const formatRekap = (tipe, data, tgl) => {
    if (!data || !tgl || !data.absensi[tgl]) return '';
    const list = data.absensi[tgl] || [];
    const total = list.length;

    // Hitung statistik
    let jumlahShalat = 0;
    let jumlahTidakShalat = 0;
    let jumlahHalangan = 0;
    let jumlahDispen = 0;
    let jumlahTidakSekolah = 0;

    list.forEach(s => {
      const val = (s.shalat || '').toLowerCase();
      if (val === 'ya') jumlahShalat++;
      else if (val === 'tidak') jumlahTidakShalat++;
      else if (val.includes('halangan')) jumlahHalangan++;
      else if (val.includes('dispen')) jumlahDispen++;
      else if (val.includes('tidak sekolah')) jumlahTidakSekolah++;
    });

    const judul = `Rekap Absensi Shalat (${tipe === 'siswa' ? 'Siswa' : 'Siswi'}) - Kelas ${data.kelas} (Wali Kelas: ${data.wali_kelas})\nTanggal: ${tgl}\n\n`;
    const body = list.map((r, i) => `${i + 1}. ${r.nama} | Shalat: ${r.shalat}`).join('\n');

    const footer = `\n\n---\nSHALAT : ${jumlahShalat} ORANG\nTIDAK SHALAT : ${jumlahTidakShalat} ORANG${tipe === 'siswi' ? `\nHALANGAN : ${jumlahHalangan} ORANG` : ''}\nDISPEN : ${jumlahDispen} ORANG\nTIDAK SEKOLAH : ${jumlahTidakSekolah} ORANG\nTOTAL ${tipe === 'siswa' ? 'SISWA' : 'SISWI'} : ${total} ORANG\n---`;

    return `${judul}${body}${footer}`;
  };

  const salinRekap = (tipe) => {
    const data = tipe === 'siswa' ? dataSiswa : dataSiswi;
    const teks = formatRekap(tipe, data, tanggalPilih);
    if (!teks) {
      alert('Tidak ada data untuk tanggal tersebut.');
      return;
    }
    setSalinText(teks);
    navigator.clipboard.writeText(teks);
    alert(`Rekap absensi ${tipe} tanggal ${tanggalPilih} disalin!`);
  };

  const salinSemua = () => {
    const siswaTeks = formatRekap('siswa', dataSiswa, tanggalPilih);
    const siswiTeks = formatRekap('siswi', dataSiswi, tanggalPilih);
    const finalText = `${siswaTeks}\n\n${siswiTeks}\n\nLihat Hasil Absen\nhttps://absensi-xic.vercel.app\n---\nGenerated by Sistem Absensi Sekolah\nÂ© 2025 - Created by Rizky`;

    setSalinText(finalText);
    navigator.clipboard.writeText(finalText);
    alert(`Rekap absensi siswa & siswi tanggal ${tanggalPilih} disalin!`);
  };

  const keluar = () => window.location.href = '/';

  if (!dataSiswa || !dataSiswi) return <p className="p-6 text-center text-white">Memuat data absensi...</p>;

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-900 via-indigo-900 to-purple-900 text-white p-6">
      <div className="max-w-5xl mx-auto bg-gray-900/80 p-6 rounded-2xl shadow-2xl border border-indigo-400/50">
        <div className="flex justify-end items-center mb-6">
          <button onClick={keluar} className="bg-red-600 hover:bg-red-700 text-white px-4 py-1 rounded-lg text-sm">
            Keluar
          </button>
        </div>

        <label className="block mb-4">
          Pilih tanggal:
          <select
            className="ml-2 px-3 py-1 rounded bg-gray-800 text-white border border-indigo-400"
            value={tanggalPilih}
            onChange={e => setTanggalPilih(e.target.value)}
          >
            {tanggalList.map(tgl => <option key={tgl}>{tgl}</option>)}
          </select>
        </label>

        {/* Tabel Siswa */}
        <h2 className="text-2xl font-bold text-blue-300 mb-3">Rekap Absensi Shalat (Siswa)</h2>
        <table className="table-auto w-full text-left border border-gray-700 mb-4">
          <thead>
            <tr className="bg-blue-700 text-white">
              <th className="px-4 py-2">No</th>
              <th className="px-4 py-2">Nama</th>
              <th className="px-4 py-2">Shalat</th>
            </tr>
          </thead>
          <tbody>
            {tanggalPilih && dataSiswa.absensi[tanggalPilih] ? (
              dataSiswa.absensi[tanggalPilih].map((r, i) => (
                <tr key={i} className="border-t border-gray-700">
                  <td className="px-4 py-2">{i + 1}</td>
                  <td className="px-4 py-2">{r.nama}</td>
                  <td className="px-4 py-2">{r.shalat}</td>
                </tr>
              ))
            ) : (
              <tr><td colSpan={3} className="text-center p-4 text-gray-400">Tidak ada data</td></tr>
            )}
          </tbody>
        </table>
        <button onClick={() => salinRekap('siswa')} className="bg-green-500 hover:bg-green-600 text-white px-6 py-2 rounded-lg mb-8">Salin Hasil Siswa</button>

        {/* Tabel Siswi */}
        <h2 className="text-2xl font-bold text-pink-300 mb-3">Rekap Absensi Shalat (Siswi)</h2>
        <table className="table-auto w-full text-left border border-gray-700 mb-4">
          <thead>
            <tr className="bg-pink-700 text-white">
              <th className="px-4 py-2">No</th>
              <th className="px-4 py-2">Nama</th>
              <th className="px-4 py-2">Shalat</th>
            </tr>
          </thead>
          <tbody>
            {tanggalPilih && dataSiswi.absensi[tanggalPilih] ? (
              dataSiswi.absensi[tanggalPilih].map((r, i) => (
                <tr key={i} className="border-t border-gray-700">
                  <td className="px-4 py-2">{i + 1}</td>
                  <td className="px-4 py-2">{r.nama}</td>
                  <td className="px-4 py-2">{r.shalat}</td>
                </tr>
              ))
            ) : (
              <tr><td colSpan={3} className="text-center p-4 text-gray-400">Tidak ada data</td></tr>
            )}
          </tbody>
        </table>
        <button onClick={() => salinRekap('siswi')} className="bg-green-500 hover:bg-green-600 text-white px-6 py-2 rounded-lg mb-8">Salin Hasil Siswi</button>

        {/* Tombol Salin Semua */}
        <button onClick={salinSemua} className="bg-indigo-500 hover:bg-indigo-600 text-white px-6 py-2 rounded-lg w-full mb-6">
          Salin Semua (Siswa + Siswi)
        </button>

        {/* Preview hasil salinan */}
        <textarea
          className="w-full mt-6 p-3 rounded-lg bg-gray-800 text-sm text-gray-100 border border-gray-700"
          rows={10}
          readOnly
          value={salinText}
          placeholder="Hasil rekap akan muncul di sini setelah disalin"
        ></textarea>
      </div>
    </div>
  );
}
