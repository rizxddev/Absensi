import { useState, useEffect } from 'react';

export default function Admin2() {
  const [kelas, setKelas] = useState("XI C");
  const [wali, setWali] = useState("Gun Gun Nugraha");
  const [tanggal, setTanggal] = useState(new Date().toISOString().slice(0, 10));

  const [siswiShalat, setSiswiShalat] = useState([]);
  const [salinText, setSalinText] = useState('');

  // Ambil data siswi
  const fetchSiswiShalat = async () => {
    try {
      const res = await fetch('/api/getSiswi', { cache: 'no-store' });
      const json = await res.json();
      setSiswiShalat(json.siswi || []);
    } catch {
      setSiswiShalat([]);
    }
  };

  useEffect(() => {
    const token = localStorage.getItem('admin_ok');
    if (!token) {
      window.location.href = '/';
      return;
    }
    fetchSiswiShalat();
  }, []);

  const logout = () => {
    localStorage.removeItem('admin_ok');
    window.location.href = '/';
  };

  const simpanSiswiShalat = async (list) => {
    const res = await fetch('/api/updateSiswi', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ siswi: list })
    });
    const json = await res.json();
    if (json.success) fetchSiswiShalat();
    else alert('Gagal simpan data siswi: ' + JSON.stringify(json.error || json));
  };

  const tambahSiswiShalat = async () => {
    const nama = prompt('Nama siswi baru:');
    if (!nama) return;
    const updated = [...siswiShalat, { id: Date.now(), nama }];
    await simpanSiswiShalat(updated);
  };

  const hapusSiswiShalat = async (id) => {
    if (!confirm('Hapus siswi ini?')) return;
    const updated = siswiShalat.filter(s => s.id !== id);
    await simpanSiswiShalat(updated);
  };

  const simpanAbsensiShalat = async () => {
    const hasil = siswiShalat.map(s => ({
      nama: s.nama,
      shalat: document.querySelector(`input[name="shalat_${s.id}"]:checked`)?.value || "Tidak"
    }));
    const data = { kelas, wali_kelas: wali, absensi: { [tanggal]: hasil } };

    const res = await fetch('/api/updateHasil2', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(data)
    });
    const json = await res.json();
    alert(json.success ? 'Absensi siswi berhasil disimpan!' : 'Gagal simpan absensi siswi!');
  };

  const salinHasil = () => {
    const hasil = siswiShalat.map((s, i) => {
      const status = document.querySelector(`input[name="shalat_${s.id}"]:checked`)?.value || "Tidak";
      return { nama: s.nama, shalat: status };
    });

    const total = hasil.length;
    const hitung = (k) => hasil.filter(h => h.shalat.toLowerCase() === k.toLowerCase()).length;

    const shalatCount = hitung('Ya');
    const tidakCount = hitung('Tidak');
    const halanganCount = hitung('Halangan');
    const dispenCount = hitung('Dispen');
    const tidakSekolahCount = hitung('Tidak Sekolah');

    let teks = `Rekap Absensi Shalat (Siswi) - Kelas ${kelas} (Wali Kelas: ${wali})\nTanggal: ${tanggal}\n\n`;
    hasil.forEach((r, i) => {
      let statusTampil = r.shalat;
      if (r.shalat === 'Dispen') statusTampil = 'Tidak Sekolah (Dispen)';
      teks += `${i + 1}. ${r.nama} | Shalat: ${statusTampil}\n`;
    });

    teks += `\n---\nSHALAT : ${shalatCount} ORANG\nTIDAK SHALAT : ${tidakCount} ORANG\nHALANGAN : ${halanganCount} ORANG\nDISPEN : ${dispenCount} ORANG\nTIDAK SEKOLAH : ${tidakSekolahCount} ORANG\nTOTAL SISWI : ${total} ORANG\n---\n`;
    teks += `Lihat Hasil Absen:\nhttps://absensi-xic.vercel.app\n---\nGenerated by Sistem Absensi Sekolah\nÂ© 2025 - Created by Rizky`;

    setSalinText(teks);
    navigator.clipboard.writeText(teks);
    alert('Hasil absensi berhasil disalin!');
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-900 via-indigo-900 to-purple-900 text-white p-6">
      {/* Tombol Keluar */}
      <div className="flex justify-end mb-4">
        <button onClick={logout} className="bg-red-600 px-4 py-2 rounded">Keluar</button>
      </div>

      <h2 className="text-3xl font-bold text-center mb-6">Panel Admin Absensi Siswi</h2>
      <div className="flex flex-col md:flex-row justify-center space-x-0 md:space-x-6 mb-6">
        <label className="flex flex-col mb-2">
          <span>Tanggal:</span>
          <input type="date" value={tanggal} onChange={e => setTanggal(e.target.value)} className="px-3 py-2 rounded bg-gray-800 text-white" />
        </label>
        <label className="flex flex-col mb-2">
          <span>Kelas:</span>
          <input value={kelas} onChange={e => setKelas(e.target.value)} className="px-3 py-2 rounded bg-gray-800 text-white" />
        </label>
        <label className="flex flex-col mb-2">
          <span>Wali Kelas:</span>
          <input value={wali} onChange={e => setWali(e.target.value)} className="px-3 py-2 rounded bg-gray-800 text-white" />
        </label>
      </div>

      {/* Absensi Shalat Siswi */}
      <div className="bg-gray-900/70 p-4 rounded-lg shadow">
        <h3 className="text-xl font-bold text-pink-400 mb-3">Absensi Shalat Siswi</h3>
        <button className="bg-green-500 px-4 py-2 rounded mb-4" onClick={tambahSiswiShalat}>Tambah Siswi</button>
        <table className="table-auto w-full text-white border">
          <thead>
            <tr className="bg-pink-700">
              <th>No</th><th>Nama</th>
              <th>Ya</th><th>Tidak</th><th>Halangan</th><th>Dispen</th><th>Tidak Sekolah</th><th>Aksi</th>
            </tr>
          </thead>
          <tbody>
            {siswiShalat.map((s, i) => (
              <tr key={s.id} className="border-t border-gray-700">
                <td>{i + 1}</td>
                <td>{s.nama}</td>
                {/* Semua radio satu grup per siswi */}
                {['Ya', 'Tidak', 'Halangan', 'Dispen', 'Tidak Sekolah'].map(opt => (
                  <td key={opt}><input type="radio" name={`shalat_${s.id}`} value={opt} defaultChecked={opt === 'Ya'} /></td>
                ))}
                <td><button onClick={() => hapusSiswiShalat(s.id)} className="bg-red-600 px-3 py-1 rounded">Hapus</button></td>
              </tr>
            ))}
          </tbody>
        </table>
        <div className="flex space-x-4 mt-4">
          <button className="bg-blue-500 px-5 py-2 rounded" onClick={simpanAbsensiShalat}>Simpan Absensi</button>
          <button className="bg-purple-500 px-5 py-2 rounded" onClick={salinHasil}>Salin Hasil</button>
        </div>
      </div>

      {/* Preview hasil salinan */}
      <textarea
        className="w-full mt-4 p-3 rounded-lg bg-gray-800 text-sm text-gray-100 border border-gray-700"
        rows={8}
        readOnly
        value={salinText}
        placeholder="Hasil salinan akan muncul di sini setelah klik Salin Hasil"
      ></textarea>
    </div>
  );
}
